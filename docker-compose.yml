services:
  # PostgreSQL service
  db:
    image: postgres:15 # here i am directly using the posgres image instead we can seperately build a image and reference it here
    container_name: pgsql # we can give whatever name we want. if we arent giving any name docker gives random names to it
    environment:
      # it expects a map for environment variable so no -
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: docker_test1
    volumes:
      #This is a list â€” an array of strings.
      - pg_data:/var/lib/postgresql/data # Mount the named volume pg_data into the container at /var/lib/postgresql/data, which is where PostgreSQL stores all of its database files.
    ports:
      - "15432:5432" # Exposing port to access it externally <host_port>:<container_port>
  golang:
    image: godocker:v7 # this is a image which i built from Dockerfile.golang
    container_name: godocker_test
    ports:
      - "8080:8080"

volumes:
  pg_data:
    # we are telling Docker to mount pg_data at that path, but you're not saying what pg_data is 
    # The bottom volumes: section is where all named volumes are declared.
    # It keeps things explicit and organized.
    # Not required for basic use, but highly recommended for clarity, especially in production setups or complex Compose files.
